demo()
install.packages("devtools")
install.packages(c("slidify", "ggplot2"))
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
x <- 1:4
y <- 2
x + y
class(x+y)
hw1_data <- read.csv("~/Learning/Coursera/02 R Programming/Week1/hw1_data.csv")
View(hw1_data)
hw1_data
hw1_data[1]
hw1_data(1)
hw1_data(1,47)
hw1_data[1,47]
hw1_data[47,1]
is.na(hw1_data[1])
complete.cases(x[1])
complete.cases(hw1_data[1])
good <- complete.cases(hw1_data[1])
hw1_data[!good]
hw1_data[1][!good]
hw1_data[1] * good
ozone <- hw1_data[1]
ozone[!good]
good
ozone
View(ozone)
View(ozone)
good <- complete.cases(ozone)
hw1_data[good,]
sum(ozone)
sum(ozone, na.rm=TRUE)
sum(good)
sum(!good)
mean(ozone)
ozone[1:6]
ozone[1,1:6]
ozone[1:6,1]
ozone[1:153,1]
mean(ozone[1:153,1])
mean(ozone[1:153,1], na.rm=TRUE)
View(ozone)
View(hw1_data)
hw1_data[[Ozone > 31]]
class(hw1_data)
a <- data.matrix(hw1_data)
View(a)
a[[Ozone > 31]]
class(a)
a
a$Ozone
a[1]
a[1,]
a[a[,1]>31]
a[a[,1]>31,]
a[,1]>31
a[,1]
a[a[,1]>31,]
b <- a[a[,1]>31,]
c <- b[b[,4]>90,]
c
mean(c[1:47,2], na.rm=TRUE)
a[a[,6]==6,]
a[a[,5]==6,]
d <- a[a[,5]==6,]
mean(d[,4], na.rm=TRUE)
May <- a[a[,5]==5,]
May
max(May[,4], na.rm=TRUE)
max(May[,1], na.rm=TRUE)
x <- 4L
class(x)
x <- c(4, TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x, y)
z <- cbind(x, y)
class(z)
x <- list(2, "a", "b", TRUE)
x[[1]]
class(x[[1]])
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
x <- matrix(rnorm(200), 20, 10)
x
a <- array(rnorm(2 * 2 * 10), c(2, 2, 10))
a
x <- c(rnorm(10), runif(10), rnorm(10, 1))
x
x <- c(rnorm(10), runif(10), rnorm(10, 1))
x
f <- gl(3, 10)
f
split(x, f)
library(datasets)
head(airquality)
s <- split(airquality, airquality$Month)
s
sapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")],
na.rm = TRUE))
data(iris)
?iris
view(iris)
iris
s <- split(iris, iris$Species)
s
sapply(s, function(x) colMeans(x[, "Sepal.Length"], na.rm = TRUE))
sapply(s, function(x) colMeans(x[, Sepal.Length], na.rm = TRUE))
sapply(s, function(x) colMeans(x[, c("Sepal.Length")],na.rm = TRUE))
data(iris)
s <- split(iris, iris$Species)
sapply(s, function(x) colMeans(x[, c("Sepal.Length")],na.rm = TRUE))
colMeans
s
load(airquality)
data(airquality)
t <- split(airquality, airquality$Month)
t
lapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")]))
lapply(t, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")]))
lapply(t, function(x) colMeans(x[, c("Sepal.Length", "Sepal.Width")]))
lapply(s, function(x) colMeans(x[, c("Sepal.Length", "Sepal.Width")]))
colMeans(iris)
apply(iris[, 1:4], 2, mean)
lapply(s, function(x) colMeans(x[, 1:4]))
data(mtcars)
?mtcars
data(mtcars)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(mtcars, cyl, mean)
apply(mtcars, 2, mean)
lapply(mtcars, mean)
sapply(split(mtcars$mpg, mtcars$cyl), average)
sapply(split(mtcars$mpg, mtcars$cyl), ave)
sapply(split(mtcars$hp, mtcars$cyl), ave)
debug(ls)
ls
exit
1
2
3
debug
x
q
quit
help
Q
setwd("~/GitHub/ProgrammingAssignment2")
x <- c(4,2)
y <- c(7,6)
cbind(x,y)
z <- cbind(x,y)
solve(z)
source('~/.active-rstudio-document', echo=TRUE)
cacheSolve(z)
View(z)
